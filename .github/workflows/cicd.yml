name: Build and deploy
on:
  push:
    branches:
      - 'master'

jobs:
  build-app:
    name: Build application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Check types
        run: npm run check-types

  publish-app:
    name: Publish package to npm
    needs: build-app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Restore cached dependencies
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build package
        run: npm run build
      - name: Set up git user
        run: |
          git config --global user.email "vianomore@gmail.com"
          git config --global user.name "Ivan Vasilev"
      - name: Publish release
        run: |
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
          npm run release-it
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Run tests
#        run: |
#          npm test -- --coverage
#          bash <(curl -s https://codecov.io/bash) -f ./coverage/coverage-final.json
